KeyValue 数据库键值

==========固定键值系列============
// 存放最近一个区块的信息  (索引成功后再存放, 用于快速获取最新区块信息)
latestblock ->  区块高度(字符串方式存放)      

==========区块键值系列============
// 区块信息 (存放区块号为0-n的区块信息, 历史全部信息)
block::123  ->  区块全信息

// 存放区块哈希对应的块高度
bkhash::block_hash -> 块高度

==========铭文键值系列============
// 存放铭文的主体的键值信息  (信息中的所有者地址只有创造者)
inscr::[inscription_id]    -> HookInscription{}   铭文信息
inscr::number::[inscription_num] -> inscription_id	铭文编号转ID

==========协议键值系列============

// 创世铭文
mrc721::geninsc::[mrc721_name]  -> Mrc721GenesisData{}  存放创世者(第一个铭刻人)的地址,块高度,等信息.  每种铭文一个. [块高,铭文ID,创始人地址 ]
mrc20::geninsc::[mrc20_tick] -> mrc721_name

// 铭文名字 对 铭文id (主要存放某个名字与下面大量的铭文)
mrc721::name_inscr::[mrc721_name]::[inscription_id] -> nil
mrc20::name_inscr::[mrc20_tick]::[inscription_id] -> nil

// 用户地址 对 铭文id (主要存放某个用户拥有的所有铭文)  
mrc721::addr_inscr::[user_addr]::[inscription_id] -> nil
mrc20::addr_inscr::[user_addr]::[inscription_id] -> nil

// 铭文id 对 用户地址  
mrc721::inscr_addr::[inscription_id]::[user_addr] -> nil
mrc20::inscr_addr::[inscription_id]::[user_addr] -> nil

// 存放用户的资产信息的键值
mrc20::balance::[user_addr]::[mrc20_tick] -> 对应资产的数量 (字符串型数字)

// 铭文系列序号 对 铭文id
mrc721::count_inscr::[mrc721_name]::[mrc721_count] -> inscription_id
mrc721::inscr_count::[mrc721_name]::[inscription_id] -> mrc721_count

// 单个地址已铭刻的矿机数量
mrc721::addr_num::[mrc721_name]::[user_addr] -> num

// 存放用户燃烧的资产信息
mrc721::burn::[inscription_id] -> 对应燃烧数量 (bigInt类型)
// 单个铭文的挖矿累计记录
mrc721::inscr_miner::[inscription_id] -> 挖矿累计数量 (bigInt类型)
// 单个铭文的当前算力值
mrc721::inscr_power::[inscription_id] -> 当前算力值 (bigInt类型)
// 中奖名单 
lottery::mrc721::[mrc721_name]::[round] -> LotteryData{} 中奖详细信息


==========流水记账键值系列============
// 第二阶段补充...


